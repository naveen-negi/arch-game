# How to Play "Cache Wars - The Dependency Dilemma"

Great question! This is a **tabletop/paper-based strategy game** that can be played solo or with a team. Here's how to actually play it:

## üéÆ Quick Start Guide

### Materials Needed:
- **Paper & pen** (or a spreadsheet/digital doc)
- **Two six-sided dice** (or use an online dice roller)
- **Timer** (optional, for timed decision phases)

### Basic Setup:

1. **Create Your Game Board** (tracking sheet):
```
WEEK: [1][2][3][4][5][6][7][8]
BUDGET: 100 AP
METRICS:
- Response Time: 500ms (current)
- Availability: 95% (current)
- Security Score: 0/10
- Cache Hit Rate: 0%

DEPLOYED PATTERNS:
- (empty)

TEAM STATUS:
- Sr Engineers: 2 (4 pts/week each)
- Mid Engineers: 3 (2 pts/week each)
```

## üéØ How to Play Each Turn (Week)

### Phase 1: Intelligence (1-2 min)
Look at the upcoming challenges for your current week. Roll 2d6 to add randomness:
- **2-4**: Challenge arrives early (this week)
- **5-9**: Challenge arrives as scheduled
- **10-12**: You get advance warning (+1 week to prepare)

### Phase 2: Planning (3-5 min)
Choose which pattern(s) to deploy:
1. Check your available budget (Architecture Points)
2. Check your team capacity (story points available)
3. Select patterns that counter incoming challenges
4. Consider synergies between patterns

### Phase 3: Deployment
Mark off the costs:
- Subtract Architecture Points from budget
- Assign engineers to implement patterns
- Patterns take 1-2 weeks to deploy (based on complexity)

### Phase 4: Resolution
When a challenge hits:
1. **Roll 2d6 for base challenge strength**
2. **Check your defenses:**
   - If you have "Effective Counter": Challenge strength -4
   - If you have partial defense: Challenge strength -2
   - If pattern is "Resistant to": No effect
3. **Apply damage** if challenge strength > 0:
   - Subtract from relevant metrics
   - Track impact on victory conditions

### Phase 5: Evolution
- Gain experience: Team levels up after successfully defending
- Random events (roll d6):
  - 1: Budget cut! Lose 10 AP
  - 2-5: Normal operations
  - 6: Bonus budget! Gain 15 AP

## üé≤ Combat Resolution Example

**Scenario**: Week 2, Black Friday Preview hits!
- Base challenge: Roll 2d6 = 8
- You deployed: In-memory cache (effective counter)
- Resolution: 8 - 4 = 4 damage
- Apply: -4 to User Experience metric

## üèÜ Ways to Play

### Solo Mode (Recommended for First Play)
Play all 8 weeks, trying to achieve the victory conditions. Keep score and try to beat it next time!

### Team Mode (2-4 players)
- **Collaborative**: Work together, discuss each decision
- **Competitive**: Each player architects a solution separately, compare scores
- **Role-play**: Each player represents different stakeholder (Performance, Security, Cost, Reliability)

### Speed Run Variant
Set a 30-minute timer for the entire game. Make quick decisions!

### Ironman Mode
No takebacks! Once you deploy a pattern, it's permanent.

## üì± Digital Adaptations

### Spreadsheet Version
Create a Google Sheet with:
- Automated budget tracking
- Random number generation for challenges
- Scoring calculator
- Pattern synergy matrix

### Discord/Slack Play
- GM posts weekly challenges
- Players submit their deployments
- GM resolves and narrates outcomes
- Great for async team play!

### Simple Web App (DIY)
Build a basic React app using the artifact system:
- Track state for all metrics
- Implement the challenge system
- Auto-calculate combat resolution
- Add visualizations for metrics

## üéØ Simplified "Coffee Break" Version

**5-Minute Quick Play:**
1. Draw 3 random challenges
2. You have 50 points to spend
3. Deploy patterns to counter all 3
4. Roll dice for each challenge
5. Score: Damage taken √ó -1 + Points remaining

## üìä Scoring Your Game

**End Game Scoring:**
```
Performance Score: ___/30
- Response time < 100ms: 15 pts
- Response time < 200ms: 10 pts
- Response time < 500ms: 5 pts
- Cache hit rate √ó 15

Availability Score: ___/30
- Never dropped below 99.9%: 30 pts
- Never dropped below 99%: 20 pts
- Never dropped below 95%: 10 pts

Security Score: ___/20
- Passed all security challenges: 20 pts
- Partial defense: 10 pts

Efficiency Score: ___/20
- Points remaining √∑ 5
- No operational costs: +5 bonus

TOTAL: ___/100
```

## üöÄ Make It More Interactive

**Physical Props:**
- Use index cards for each pattern (makes it feel like a card game)
- Tokens/chips for Architecture Points
- Red/green markers for tracking metrics
- Challenge cards you draw each week

**Narrative Mode:**
Write a short "incident report" after each challenge resolution, explaining what happened in story form. Makes great learning material!

## üí° Start Simple!

For your first game:
1. Just track Budget and Response Time
2. Play only weeks 1-4
3. Focus on surviving the challenges
4. Don't worry about optimal scoring

Then add complexity as you get comfortable with the mechanics.

---

**Want to start playing right now?** Grab a piece of paper, write down your starting resources, and face Week 1! The first decision: Do you start building defenses immediately, or wait to see how the first challenge goes?

*Remember: This game is really a structured way to think through architectural trade-offs. The real victory is understanding when and why to use different caching patterns!*